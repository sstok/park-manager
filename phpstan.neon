includes:
    - vendor/phpstan/phpstan-symfony/extension.neon
    - vendor/phpstan/phpstan-doctrine/extension.neon
    - vendor/phpstan/phpstan-phpunit/extension.neon
    - vendor/jangregor/phpstan-prophecy/extension.neon

    - vendor/phpstan/phpstan-phpunit/rules.neon
    - phpstan-baseline.neon

parameters:
    #reportUnmatchedIgnoredErrors: false

    level: 8
    paths:
        - ./src
        - ./tests
        - ./public
        - ./bin
    excludePaths:
        - var/
        - templates/
        - translations/

        # Enums
        - src/Domain/EnumTrait.php
        - tests/Domain/EnumTraitTest.php

        - src/Infrastructure/Security/Guard/*.php # These files are deprecated and need to be replaced
        - src/UI/Web/Action/FormExampleAction.php # No functional purpose

    stubFiles:
        - .github/.phpstan-stubs/symfony/Constraint.stub
        - .github/.phpstan-stubs/symfony/Request.stub
        - .github/.phpstan-stubs/symfony/ArgumentValueResolverInterface.stub
        - .github/.phpstan-stubs/symfony/Form/FormBuilderInterface.stub
        - .github/.phpstan-stubs/symfony/Form/Form.stub

    symfony:
        container_xml_path: %currentWorkingDirectory%/var/cache/dev/ParkManager_KernelDevDebugContainer.xml
        constant_hassers: true

    ignoreErrors:
        - '#Cannot cast Symfony\\Component\\Validator\\ConstraintViolationListInterface to string#'
        - '#Call to an undefined method Symfony\\Component\\Security\\Core\\User\\UserInterface\:\:getId\(\)#'

        - '#Method ParkManager\\Infrastructure\\Validator\\Constraints\\([^:]+)\:\:__construct\(\) has parameter \$options with no value type specified in iterable type array#'
        - '#Method ParkManager\\Infrastructure\\Validator\\Constraints\\([^:]+)\:\:getTargets\(\) return type has no value type specified in iterable type array#'

        ## False positive
        - '#Cannot call method forHumans\(\) on Carbon\\CarbonInterval\|string#'

        -
            # This can never happen. A name always has a dot.
            message: "#^Parameter \\#1 \\$start of method Symfony\\\\Component\\\\String\\\\UnicodeString\\:\\:slice\\(\\) expects int, int\\|null given\\.$#"
            path: src/Domain/DomainName/DomainNamePair.php

        -
            # This can never happen. An Email address always has an @-sign.
            message: "#^Parameter \\#1 \\$start of method Symfony\\\\Component\\\\String\\\\UnicodeString\\:\\:slice\\(\\) expects int, int\\|null given\\.$#"
            path: src/Domain/EmailAddress.php

        # Unum
        -
            message: '#Match expression does not handle remaining values: int<min, -2>|int<4, max>|string#'
            path: src/Domain/Webhosting/Space/SpaceSetupStatus.php

        - '#Parameter \#2 \$level of class ParkManager\\Domain\\Webhosting\\Space\\Exception\\WebhostingSpaceIsSuspended constructor expects ParkManager\\Domain\\Webhosting\\Space\\SuspensionLevel, ParkManager\\Domain\\Webhosting\\Space\\SuspensionLevel\|null given#'
